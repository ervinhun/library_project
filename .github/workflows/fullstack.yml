name: FullStack Ci

on:
    pull_request:
        paths:
        - 'server/**'
        - 'client/**'
    push:
        branches:
        - main
jobs:
  backend:
    name: Backend CI
    runs-on: ubuntu-latest
    
    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Setup .NET SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      # 3. Restore solution dependencies
      - name: Restore dependencies
        run: dotnet restore server/library_project.sln

      # 4. Build solution
      - name: Build solution
        run: dotnet build server/library_project.sln --configuration Release --no-restore

      # 5. Generate appsettings.json from GitHub Secret
      - name: Generate appsettings.json
        run: |
          cat <<EOF > server/Api/appsettings.json
          {
            "Logging": {
              "LogLevel": {
                "Default": "Information",
                "Microsoft.AspNetCore": "Warning"
              }
            },
            "AllowedHosts": "*",
            "Db": "${{ secrets.DB_CONNECTION_STRING }}"
          }
          EOF

      # 6. Run tests
      - name: Run tests
        run: dotnet test server/library_project.sln --no-build --verbosity normal

      # 7. Publish API (optional)
      - name: Publish API
        run: dotnet publish server/Api/Api.csproj -c Release -o ./publish

      # 8. Docker build
      - name: Build Docker image
        working-directory: server
        run: docker build -t library-api-backend/server .


        
  frontend:
    name: Frontend CI
    runs-on: ubuntu-latest
    
    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      # 3. Install dependencies
      - name: Install dependencies
        working-directory: client
        run: npm ci

      # 4. Run code style check (optional, e.g., ESLint)
      - name: Lint
        working-directory: client
        run: npm run lint

      # 5. Build frontend
      - name: Build frontend
        working-directory: client
        run: npm run build

      # 6. Run frontend tests
      #- name: Run tests
      #  working-directory: client
      #  run: npm test
